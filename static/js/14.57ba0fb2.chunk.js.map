{"version":3,"file":"static/js/14.57ba0fb2.chunk.js","mappings":"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","sources":["api/api.js","api/auth.js","components/Button.jsx","components/Input.jsx","components/layout/ServiceWrapper.jsx","components/TodoItem.jsx","pages/TodoPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport auth from \"./auth\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    Authorization: `Bearer ${auth.getToken()}`,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const accessToken = auth.getToken();\r\n\r\n  if (accessToken && config.headers) {\r\n    config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n  }\r\n  return config;\r\n});\r\n","const auth = {\r\n  setToken(token) {\r\n    return localStorage.setItem(\"token\", token);\r\n  },\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  },\r\n\r\n};\r\nexport default auth;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst Button = ({ onClick, text, type, ...props }) => {\r\n  return (\r\n    <ButtonWra onClick={onClick} {...props}>\r\n      {text}\r\n    </ButtonWra>\r\n  );\r\n};\r\n\r\nconst ButtonWra = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  background: #505050;\r\n  color: #fff;\r\n  font-weight: bold;\r\n\r\n  &:disabled {\r\n    background: #bbb;\r\n  }\r\n\r\n  &.delete {\r\n    background: none;\r\n    border: 1px solid #dd3333;\r\n    color: #dd3333;\r\n    margin-left: 10px;\r\n    width: 100px;\r\n  }\r\n\r\n  &.update {\r\n    background: none;\r\n    border: 1px solid #333;\r\n    color: #333;\r\n    margin-left: 10px;\r\n    width: 100px;\r\n  }\r\n`;\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst Input = ({ label, isPw = false, ...props }) => {\r\n  return (\r\n    <InputArea>\r\n      {label && <LabelText>{label}</LabelText>}\r\n      <StyledInput {...props} type={isPw ? \"password\" : \"text\"} />\r\n    </InputArea>\r\n  );\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  width: auto;\r\n  font-size: 14px;\r\n  background: #fff\r\n  outline: 0;\r\n  border: 1px solid #bdbdbd;\r\n  border-radius:4px;\r\n  padding:10px 5px;\r\n\r\n  &::placeholder {\r\n    color: #bdbdbd;\r\n  }\r\n`;\r\nconst LabelText = styled.label`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n`;\r\nconst InputArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n`;\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ServiceWrapper = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <WrapperContainer>\r\n        <Header>\r\n          <h2>Pre Onboarding Frontend</h2>\r\n        </Header>\r\n        <Body>{children}</Body>\r\n        <Footer>\r\n          <p>Copyright ⓒ hm. All Rights Reserved.</p>\r\n        </Footer>\r\n      </WrapperContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Footer = styled.div`\r\n  border-top: 1px solid #ddd;\r\n  height: 35px;\r\n  display: flex;\r\n  flex: center;\r\n  align-items: center;\r\n  margin-top: auto;\r\n\r\n  & > p {\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Header = styled.div`\r\n  border-bottom: 1px solid #ddd;\r\n  height: 100px;\r\n  display: flex;\r\n  flex: center;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  & > h2 {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #8f47e6;\r\n  }\r\n\r\n\r\n`;\r\n\r\nconst Body = styled.div`\r\n  margin: auto;\r\n  width: 700px;\r\n\r\n  margin: 40px auto;\r\n  border: 1px solid #ddd;\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  background: #fff;\r\n`;\r\n\r\nconst WrapperContainer = styled.div`\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background: #ebe4f9;\r\n`;\r\nexport default ServiceWrapper;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useState } from \"react\";\r\nimport { api } from \"../api/api\";\r\nimport Button from \"./Button\";\r\nimport Input from \"./Input\";\r\n\r\nconst TodoItem = ({ item, mutate }) => {\r\n  const [changeTodo, setChangeTodo] = useState({\r\n    todo: item?.todo,\r\n    isCompleted: item?.isCompleted,\r\n  });\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  //todo 수정하기\r\n  const handleTodo = async (type, completedValue) => {\r\n    await api\r\n      .put(`/todos/${item.id}`, {\r\n        todo: isEdit ? changeTodo.todo : item?.todo,\r\n        isCompleted: type === \"check\" ? completedValue : changeTodo.isCompleted,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"성공\");\r\n        mutate();\r\n        setIsEdit(false);\r\n      })\r\n      .catch((err) => {\r\n        window.alert(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  //todo 삭제하기\r\n  const handleDelete = async () => {\r\n    await api\r\n      .delete(`/todos/${item.id}`)\r\n      .then((res) => {\r\n        console.log(\"성공\");\r\n        mutate();\r\n      })\r\n      .catch((err) => {\r\n        window.alert(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <TodoItemArea>\r\n      <CheckBox\r\n        type=\"checkbox\"\r\n        checked={item.isCompleted}\r\n        onChange={(e) => handleTodo(\"check\", e.target.checked)}\r\n      />\r\n      {isEdit ? ( //수정모드\r\n        <>\r\n          <Input\r\n            data-testid=\"modify-input\"\r\n            value={changeTodo.todo}\r\n            onChange={(e) => {\r\n              setChangeTodo({ ...changeTodo, todo: e.target.value });\r\n            }}\r\n          />\r\n          <Button\r\n            className=\"update\"\r\n            data-testid=\"submit-button\"\r\n            text=\"제출\"\r\n            onClick={handleTodo}\r\n          />\r\n          <Button\r\n            className=\"delete\"\r\n            data-testid=\"cancel-button\"\r\n            text=\"취소\"\r\n            onClick={() => {\r\n              setIsEdit(false);\r\n            }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <TodoText>{item.todo}</TodoText>\r\n          <Button\r\n            className=\"update\"\r\n            data-testid=\"modify-button\"\r\n            text=\"수정\"\r\n            onClick={() => {\r\n              setIsEdit(true);\r\n              setChangeTodo({ ...changeTodo, todo: item?.todo });\r\n            }}\r\n          />\r\n          <Button\r\n            className=\"delete\"\r\n            data-testid=\"delete-button\"\r\n            text=\"삭제\"\r\n            onClick={handleDelete}\r\n          />\r\n        </>\r\n      )}\r\n    </TodoItemArea>\r\n  );\r\n};\r\n\r\n\r\nconst CheckBox = styled.input`\r\n  margin-bottom:20px;\r\n`\r\nconst TodoText = styled.p`\r\n  font-size: 14px;\r\n  margin-bottom: 20px;\r\n  padding: 10px 5px 9px;\r\n  width: 100%;\r\n`;\r\n\r\nconst TodoItemArea = styled.li`\r\n  display: flex;\r\n`;\r\nexport default TodoItem;\r\n","import styled from \"@emotion/styled\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { api } from \"../api/api\";\r\nimport auth from \"../api/auth\";\r\n\r\nimport Button from \"../components/Button\";\r\nimport Input from \"../components/Input\";\r\nimport ServiceWrapper from \"../components/layout/ServiceWrapper\";\r\nimport TodoItem from \"../components/TodoItem\";\r\n\r\nconst TodoPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [addTodo, setAddTodo] = useState(\"\");\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  //todo list 불러오기\r\n  const getData = async () => {\r\n    await api\r\n      .get(\"/todos\")\r\n      .then((res) => {\r\n        setTodoList(res.data);\r\n      })\r\n      .catch((err) => {\r\n        throw new Error(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.getToken()) {\r\n      getData();\r\n    } else {\r\n      //토큰없으면 signin로 리다이렉트\r\n      navigate(\"/signin\");\r\n    }\r\n  }, [auth]);\r\n\r\n  //todo 추가하기\r\n  const handleTodo = async () => {\r\n    await api\r\n      .post(\"/todos\", { todo: addTodo })\r\n      .then((res) => {\r\n        setAddTodo(\"\");\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        window.alert(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ServiceWrapper>\r\n   \r\n      <h3>Todo 추가</h3>\r\n      <Input\r\n        data-testid=\"new-todo-input\"\r\n        placeholder=\"todo를 입력해주세요.\"\r\n        value={addTodo}\r\n        onChange={(e) => {\r\n          setAddTodo(e.target.value.trim());\r\n        }}\r\n      />\r\n      <Button\r\n        data-testid=\"new-todo-add-button\"\r\n        text=\"추가\"\r\n        onClick={handleTodo}\r\n      />\r\n      <Hr />\r\n\r\n      <h3>Todo 수정/삭제</h3>\r\n      {todoList?.map((item, i) => (\r\n        <TodoItem item={item} key={`todo_list` + i} mutate={getData} />\r\n      ))}\r\n    </ServiceWrapper>\r\n  );\r\n};\r\n\r\nconst Hr = styled.div`\r\n  margin: 40px 0;\r\n  border: 1px solid #ddd;\r\n`;\r\nexport default TodoPage;\r\n"],"names":["api","axios","baseURL","process","headers","Authorization","auth","interceptors","request","use","config","accessToken","setToken","token","localStorage","setItem","getToken","getItem","ButtonWra","styled","onClick","text","props","type","StyledInput","LabelText","InputArea","label","isPw","Footer","Header","Body","WrapperContainer","Wrapper","children","CheckBox","TodoText","TodoItemArea","item","mutate","useState","todo","isCompleted","changeTodo","setChangeTodo","isEdit","setIsEdit","handleTodo","completedValue","id","then","res","console","log","catch","err","window","alert","response","data","message","handleDelete","checked","onChange","e","target","Input","value","Button","className","Hr","navigate","useNavigate","addTodo","setAddTodo","todoList","setTodoList","getData","Error","useEffect","ServiceWrapper","placeholder","trim","map","i"],"sourceRoot":""}