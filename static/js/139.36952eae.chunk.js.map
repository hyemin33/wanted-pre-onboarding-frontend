{"version":3,"file":"static/js/139.36952eae.chunk.js","mappings":"+JAGaA,EAAMC,EAAAA,EAAAA,OAAa,CAC9BC,QAASC,6CACTC,QAAS,CACPC,cAAc,UAAD,OAAYC,EAAAA,EAAAA,YACzB,eAAgB,sBAIpBN,EAAIO,aAAaC,QAAQC,KAAI,SAACC,GAC5B,IAAMC,EAAcL,EAAAA,EAAAA,WAKpB,OAHIK,GAAeD,EAAON,UACxBM,EAAON,QAAuB,cAAC,iBAAaO,IAEvCD,CACT,G,qBClBA,IAAMJ,EAAO,CACXM,SAAQ,SAACC,GACP,OAAOC,aAAaC,QAAQ,QAASF,EACvC,EACAG,SAAQ,WACN,OAAOF,aAAaG,QAAQ,QAC9B,GAGF,K,kHCEMC,EAAYC,EAAAA,EAAAA,OAAa,mfA8B/B,IAtCe,SAAH,GAA2C,IAArCC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAeC,GAAL,EAAJC,MAAc,aAC7C,OACE,SAACL,GAAS,gBAACE,QAASA,GAAaE,GAAK,aACnCD,IAGP,C,8GCGMG,EAAcL,EAAAA,EAAAA,MAAY,wNAa1BM,EAAYN,EAAAA,EAAAA,MAAY,yFAKxBO,EAAYP,EAAAA,EAAAA,IAAU,6GAM5B,IAjCc,SAAH,GAA2C,IAArCQ,EAAK,EAALA,MAAM,EAAD,EAAEC,KAAAA,OAAI,OAAQ,EAAKN,GAAK,YAC5C,OACE,UAACI,EAAS,WACPC,IAAS,SAACF,EAAS,UAAEE,KACtB,SAACH,GAAW,kBAAKF,GAAK,IAAEC,KAAMK,EAAO,WAAa,YAGxD,C,2ECSMC,EAASV,EAAAA,EAAAA,IAAU,qNAanBW,EAASX,EAAAA,EAAAA,IAAU,qPAiBnBY,EAAOZ,EAAAA,EAAAA,IAAU,4KAWjBa,EAAmBb,EAAAA,EAAAA,IAAU,2HAO7Bc,EAAUd,EAAAA,EAAAA,IAAU,8HAO1B,IAvEuB,SAAH,GAAsB,IAAhBe,EAAQ,EAARA,SACxB,OACE,SAACD,EAAO,WACN,UAACD,EAAgB,YACf,SAACF,EAAM,WACL,wBAAI,+BAEN,SAACC,EAAI,UAAEG,KACP,SAACL,EAAM,WACL,uBAAG,oDAKb,C,8ICsDA,UA7DmB,WACjB,IAAMM,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAG,eAA/BC,EAAK,KAAEC,EAAQ,KACtB,GAAgCF,EAAAA,EAAAA,UAAS,IAAG,eAArCG,EAAQ,KAAEC,EAAW,MAM5BC,EAAAA,EAAAA,YAAU,WACJpC,EAAAA,EAAAA,YACF6B,EAAS,QAEb,GAAG,IAGH,IAAMQ,EAAW,yCAAG,mGACZ3C,EAAAA,EAAAA,KACE,eAAgB,CAAEsC,MAAAA,EAAOE,SAAAA,IAC9BI,MAAK,SAACC,GACLvC,EAAAA,EAAAA,SAAcuC,EAAIC,KAAKC,cACvBZ,EAAS,QACX,IACCa,OAAM,SAACC,GACNC,OAAOC,MAAMF,EAAIG,SAASN,KAAKO,QACjC,IAAG,KAAD,sCACL,kBAVgB,mCAYjB,OACE,UAAC,IAAc,YACb,wBAAI,wBACJ,SAAC,IAAK,CACJ,cAAY,cACZ1B,MAAM,qBACN2B,YAAY,iEACZC,MAAOjB,EACPkB,SAAU,SAACC,GACTlB,EAASkB,EAAEC,OAAOH,MAAMI,OAC1B,KAEF,SAAC,IAAK,CACJ,cAAY,iBACZhC,MAAM,2BACN2B,YAAY,uEACZ1B,MAAM,EACN2B,MAAOf,EACPgB,SAAU,SAACC,GAAC,OAAKhB,EAAYgB,EAAEC,OAAOH,MAAMI,OAAO,KAErD,SAAC,IAAM,CACL,cAAY,gBACZtC,KAAK,qBACLuC,UACGtB,IAAUE,GAAYA,EAASqB,OAAS,IA9C7B,IA8C+CC,KAAKxB,GAElElB,QAASuB,MAIjB,C","sources":["api/api.js","api/auth.js","components/Button.jsx","components/Input.jsx","components/layout/ServiceWrapper.jsx","pages/SigninPage.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport auth from \"./auth\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    Authorization: `Bearer ${auth.getToken()}`,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  const accessToken = auth.getToken();\r\n\r\n  if (accessToken && config.headers) {\r\n    config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n  }\r\n  return config;\r\n});\r\n","const auth = {\r\n  setToken(token) {\r\n    return localStorage.setItem(\"token\", token);\r\n  },\r\n  getToken() {\r\n    return localStorage.getItem(\"token\");\r\n  },\r\n\r\n};\r\nexport default auth;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst Button = ({ onClick, text, type, ...props }) => {\r\n  return (\r\n    <ButtonWra onClick={onClick} {...props}>\r\n      {text}\r\n    </ButtonWra>\r\n  );\r\n};\r\n\r\nconst ButtonWra = styled.button`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  background: #505050;\r\n  color: #fff;\r\n  font-weight: bold;\r\n\r\n  &:disabled {\r\n    background: #bbb;\r\n  }\r\n\r\n  &.delete {\r\n    background: none;\r\n    border: 1px solid #dd3333;\r\n    color: #dd3333;\r\n    margin-left: 10px;\r\n    width: 100px;\r\n  }\r\n\r\n  &.update {\r\n    background: none;\r\n    border: 1px solid #333;\r\n    color: #333;\r\n    margin-left: 10px;\r\n    width: 100px;\r\n  }\r\n`;\r\nexport default Button;\r\n","import styled from \"@emotion/styled\";\r\nimport React from \"react\";\r\n\r\nconst Input = ({ label, isPw = false, ...props }) => {\r\n  return (\r\n    <InputArea>\r\n      {label && <LabelText>{label}</LabelText>}\r\n      <StyledInput {...props} type={isPw ? \"password\" : \"text\"} />\r\n    </InputArea>\r\n  );\r\n};\r\n\r\nconst StyledInput = styled.input`\r\n  width: auto;\r\n  font-size: 14px;\r\n  background: #fff\r\n  outline: 0;\r\n  border: 1px solid #bdbdbd;\r\n  border-radius:4px;\r\n  padding:10px 5px;\r\n\r\n  &::placeholder {\r\n    color: #bdbdbd;\r\n  }\r\n`;\r\nconst LabelText = styled.label`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n`;\r\nconst InputArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  width: 100%;\r\n`;\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ServiceWrapper = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <WrapperContainer>\r\n        <Header>\r\n          <h2>Pre Onboarding Frontend</h2>\r\n        </Header>\r\n        <Body>{children}</Body>\r\n        <Footer>\r\n          <p>Copyright ⓒ hm. All Rights Reserved.</p>\r\n        </Footer>\r\n      </WrapperContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Footer = styled.div`\r\n  border-top: 1px solid #ddd;\r\n  height: 35px;\r\n  display: flex;\r\n  flex: center;\r\n  align-items: center;\r\n  margin-top: auto;\r\n\r\n  & > p {\r\n    width: 100%;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Header = styled.div`\r\n  border-bottom: 1px solid #ddd;\r\n  height: 100px;\r\n  display: flex;\r\n  flex: center;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  & > h2 {\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #8f47e6;\r\n  }\r\n\r\n\r\n`;\r\n\r\nconst Body = styled.div`\r\n  margin: auto;\r\n  width: 700px;\r\n\r\n  margin: 40px auto;\r\n  border: 1px solid #ddd;\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  background: #fff;\r\n`;\r\n\r\nconst WrapperContainer = styled.div`\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background: #ebe4f9;\r\n`;\r\nexport default ServiceWrapper;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { api } from \"../api/api\";\r\nimport auth from \"../api/auth\";\r\n\r\nimport Input from \"../components/Input\";\r\nimport Button from \"../components/Button\";\r\nimport ServiceWrapper from \"../components/layout/ServiceWrapper\";\r\n\r\nconst SigninPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  //email 유효성검사\r\n  const emailRegExp = /@/;\r\n\r\n  //토큰있으면 todo로 리다이렉트\r\n  useEffect(() => {\r\n    if (auth.getToken()) {\r\n      navigate(\"/todo\");\r\n    }\r\n  }, []);\r\n\r\n  //로그인 검증\r\n  const handleLogin = async () => {\r\n    await api\r\n      .post(\"/auth/signin\", { email, password })\r\n      .then((res) => {\r\n        auth.setToken(res.data.access_token);\r\n        navigate(\"/todo\");\r\n      })\r\n      .catch((err) => {\r\n        window.alert(err.response.data.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ServiceWrapper>\r\n      <h3>로그인</h3>\r\n      <Input\r\n        data-testid=\"email-input\"\r\n        label=\"이메일\"\r\n        placeholder=\"이메일을 입력해주세요.\"\r\n        value={email}\r\n        onChange={(e) => {\r\n          setEmail(e.target.value.trim());\r\n        }}\r\n      />\r\n      <Input\r\n        data-testid=\"password-input\"\r\n        label=\"패스워드\"\r\n        placeholder=\"패스워드를 입력해주세요.\"\r\n        isPw={true}\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value.trim())}\r\n      />\r\n      <Button\r\n        data-testid=\"signin-button\"\r\n        text=\"로그인\"\r\n        disabled={\r\n          !email || !password || password.length < 8 || !emailRegExp.test(email)\r\n        }\r\n        onClick={handleLogin}\r\n      />\r\n    </ServiceWrapper>\r\n  );\r\n};\r\n\r\nexport default SigninPage;\r\n"],"names":["api","axios","baseURL","process","headers","Authorization","auth","interceptors","request","use","config","accessToken","setToken","token","localStorage","setItem","getToken","getItem","ButtonWra","styled","onClick","text","props","type","StyledInput","LabelText","InputArea","label","isPw","Footer","Header","Body","WrapperContainer","Wrapper","children","navigate","useNavigate","useState","email","setEmail","password","setPassword","useEffect","handleLogin","then","res","data","access_token","catch","err","window","alert","response","message","placeholder","value","onChange","e","target","trim","disabled","length","test"],"sourceRoot":""}